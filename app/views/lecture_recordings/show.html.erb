<div>
  <video id="video" controls="" width="100%" name="media">
    <source src="<%=@lecture_recording.raw_video%>" type="video/webm">
    <% if @lecture_recording.processed_path.nil? %>
      This video has not been processed yet. Please try again later.
    <% else %>
      <source src="<%=@lecture_recording.processed_path%>" type="video/mp4">
    <% end %>
    Your browser does not support this video.
  </video>
  <div class="overlays">

    <%@lecture_recording.discussions.each do |d|%>
      <% unless d.start_time.blank?%>
        <div class="video-overlay" id="<%= d.id %>" start-time="<%= d.start_time %>" end-time="<%= d.end_time %>" style="display:none;">
          <strong><%= d.title %></strong>: <%= truncate d.content %>
          <a class="show-discussion" id="<%= d.id %>" title="Show Discussion" href=""><i class="glyphicon glyphicon-search"></i></a>
        </div>
      <%end%>
    <%end%>


  </div>

</div>
<div class="video-meta">
  <h2><%= @lecture_recording.name %></h2>
  <h4><%=link_to "#{@uos.alpha_code} - Semester #{@semester.session}, #{@semester.year}", unit_of_study_semester_path(@uos, @semester)%></h4>
  <h4 class="lecrec-uploaded-by-on"><i>uploaded by <%=User.find_by_id(@lecture_recording.user_id).name %> on <%=l @lecture_recording.created_at, :format => :string %></i></h4>
  <br>
  <h3>
    Discussions
    <% unless current_user.nil? %>
      <btn id="new-discussion-btn" class="btn btn-primary btn-video">New Discussion</btn>
    <% end %>
  </h3>
  <div class="discussions-holder">
  </div>
</div>
</div>
<div class="video-bot-padding"></div>

<% unless current_user.nil? %>
  <div class="modal fade">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
          <h4 class="modal-title">New Discussion</h4>
        </div>
        <%= render 'discussion_form'%>
      </div>
    </div>
  </div>
<% end %>

<script>
  $(document).ready(function () {
    updateDiscussions();
    updateTimeSince();
    var video = document.getElementById("video");

    // scroll to discussion
    $('.show-discussion').click(function(e) {
      video.pause();
      e.preventDefault();
      var id = $(this).attr('id');
      scrollTo($('.discussion[discussion-id="'+ id +'"]'));
    })

    // show discussion alerts in video
    video.addEventListener("timeupdate", function() {
      $('.video-overlay').each(function() {
        var it = $(this);
        var startSecond = parseSeconds(it.attr('start-time'));
        var endSecond = parseSeconds(it.attr('end-time'));

        if (isNaN(endSecond))
          endSecond = startSecond + 30;

        if (video.currentTime < startSecond || video.currentTime > endSecond) {
          it.hide();
        }
        else {
          it.show();
        }

      })

    }, false);

    // pause the video and set the current time in the discussion form
    $("#new-discussion-btn").click(function() {
      video.pause()
      $('#lecture_recording_discussions_start_time').val(currentTime(0));
      $('#lecture_recording_discussions_end_time').val(currentTime(30));
      $('.modal').modal()
    })

    function scrollTo(target) {
      $('html,body').animate({
        scrollTop: target.offset().top
      }, 500);
    }

    function currentTime(offset) {
      var s = parseInt(video.currentTime % 60) + offset;
      var m = parseInt((video.currentTime / 60) % 60);

      var sString;
      if (s < 10) sString = '0'+s
      else sString = s

      return m + ':' + sString
    }

    function parseSeconds(timestamp) {
      var timeVals = timestamp.split(':');
      var m = parseFloat(timeVals[0]);
      var s = parseFloat(timeVals[1]);
      return m * 60 + (s);
    }

    $.listen('parsley:field:validate', function () {
      validateFront();
    });

    $('#submit-btn').on('click', function () {
      $('#lecrec-discussion-form').parsley().validate();
      validateFront();
    });

    var validateFront = function () {
      if (true === $('#lecrec-discussion-form').parsley().isValid()) {
        $('.bs-callout-info').removeClass('hidden');
        $('.bs-callout-warning').addClass('hidden');
        $('#lecrec-discussion-form').ajaxForm(function() {
          $('#lecture_recording_discussions_title').val("");
          $('#lecture_recording_discussions_content').val("");
          $('.modal').modal('hide');
          $('#lecrec-discussion-form').parsley().reset();
          updateDiscussions();
          updateTimeSince();
        });
      } else {
        $('.bs-callout-info').addClass('hidden');
        $('.bs-callout-warning').removeClass('hidden');
      }
    };

    var timer = setInterval(function(){updateTimeSince()}, 30000);

    function updateDiscussions() {
      $.ajax({
        url: '<%= discussions_render_url(@lecture_recording.id)%>',
        success: function(data) {
          $('.discussions-holder').html(data);

          $(".show-comments").click(function(event) {
            event.preventDefault();
            var $commentsDiv = $(".comments[discussion-id="+$(this).attr('discussion-id')+"]");
            $commentsDiv.toggle('slow');
          })

          $('.comment-form').ajaxForm(function() {
            var $focusedCommentField = $('.comment-content-field:focus');
            var disID = $focusedCommentField.parents('.comment-form').attr('discussion-id');
            $focusedCommentField.val('');
            $focusedCommentField.blur();
            updateDiscussionComments(disID);
          });

          applyCommentDeleteJS();

          $('.start-time').click(function(e) {
            e.preventDefault();
            video.currentTime = parseSeconds($(this).attr('start-time'));
            scrollTo($('#video'))
            video.play();
          })

          $('.delete-discussion').on('click', function(event) {
            event.preventDefault();
            var url = $(this).attr('href');
            var answer = confirm ("Are you sure you want to delete this discussion?");
            if (answer){
              $.ajax({
                url: url,
                type: "post",
                dataType: "json",
                data: {"_method":"delete"},
                success: function() {
                  updateDiscussions();
                  updateTimeSince();
                }
              });
            }
            else
              return false;
          });

        }
      });
    }

    function updateTimeSince() {
      $.getJSON("<%= discussions_json_url(:id => @lecture_recording.id) %>", function(data) {
        data.forEach(function(discussion) {
          var created_at = new Date(discussion.created_at);
          if ($("[discussion-id="+discussion.id+"]").length) {
            $("[created-at-id="+discussion.id+"]").html(calculateSince(created_at))
          }
        })
      });
    }

    function updateDiscussionComments(discussionID) {
      $.get("/render_comments/"+discussionID, function(data) {
        $(".comments[discussion-id="+ discussionID +"] ol").html(data);
        applyCommentDeleteJS();
      });
    }

    function applyCommentDeleteJS() {

      $('.like-comment').click(function(e) {
        var newCount;
        var $thisLike = $(this);
        var $icon = $thisLike.find('i');
        if ($icon.hasClass('glyphicon-thumbs-up')) {
          $icon.removeClass('glyphicon-thumbs-up');
          $icon.addClass('glyphicon-thumbs-down');
          newCount = parseInt($icon.html().replace(/\D/g,'')) + 1;
          $icon.html('(' + newCount + ')');
        }
        else {
          $icon.removeClass('glyphicon-thumbs-down');
          $icon.addClass('glyphicon-thumbs-up');
          newCount = parseInt($icon.html().replace(/\D/g,'')) - 1;
        }
        $icon.html('(' + newCount + ')');
      })

      $('.delete-comment').on('click', function(event) {
        event.preventDefault();
        var id = $(this).attr('id');
        var url = $(this).attr('href');
        var answer = confirm ("Are you sure you want to delete this comment?");
        if (answer){
          $.ajax({
            url: url,
            type: "post",
            dataType: "json",
            data: {"_method":"delete"},
            success: function() {
              updateDiscussionComments(id);
            }
          });
        }
        else
          return false;
      });
    }
  });
</script>
